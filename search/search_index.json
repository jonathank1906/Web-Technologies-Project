{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"env/","text":"APP_NAME=Laravel APP_ENV=local APP_KEY=base64:0rGln6i0iOCoDEqxQHZkzKueHmrwynI2xrz7BUnNhm0= APP_DEBUG=true APP_URL=http://localhost APP_LOCALE=en APP_FALLBACK_LOCALE=en APP_FAKER_LOCALE=en_US APP_MAINTENANCE_DRIVER=file # APP_MAINTENANCE_STORE=database PHP_CLI_SERVER_WORKERS=4 BCRYPT_ROUNDS=12 LOG_CHANNEL=stack LOG_STACK=single LOG_DEPRECATIONS_CHANNEL=null LOG_LEVEL=debug DB_CONNECTION=pgsql DB_HOST=localhost DB_PORT=5432 DB_DATABASE=laravel DB_USERNAME=postgres DB_PASSWORD=postgres SESSION_DRIVER=database CACHE_STORE=database QUEUE_CONNECTION=database SESSION_DRIVER=database SESSION_LIFETIME=120 SESSION_ENCRYPT=false SESSION_PATH=/ SESSION_DOMAIN=null BROADCAST_CONNECTION=log FILESYSTEM_DISK=local QUEUE_CONNECTION=database CACHE_STORE=database # CACHE_PREFIX= MEMCACHED_HOST=127.0.0.1 REDIS_CLIENT=phpredis REDIS_HOST=127.0.0.1 REDIS_PASSWORD=null REDIS_PORT=6379 MAIL_MAILER=log MAIL_SCHEME=null MAIL_HOST=127.0.0.1 MAIL_PORT=2525 MAIL_USERNAME=null MAIL_PASSWORD=null MAIL_FROM_ADDRESS=\"hello@example.com\" MAIL_FROM_NAME=\"${APP_NAME}\" AWS_ACCESS_KEY_ID= AWS_SECRET_ACCESS_KEY= AWS_DEFAULT_REGION=us-east-1 AWS_BUCKET= AWS_USE_PATH_STYLE_ENDPOINT=false VITE_APP_NAME=\"${APP_NAME}\"","title":"Env"},{"location":"prerequisites/","text":"Node.js Download Download and install the latest Node.js version, making sure it is at least v22.12.0 or newer.","title":"Prerequisites"},{"location":"setup/","text":"Setup Guide for Running Locally Prerequisites PHP Composer Node.js & npm PostgreSQL See the prerequisites page for detailed instructions. Steps Clone the repository git clone https://github.com/jonathank1906/Web-Technologies-Project.git cd Web-Technologies-Project Install PHP dependencies composer install Copy and configure environment file cp .env.example .env Copy and paste from here . Install Node.js dependencies npm install Build frontend assets npm run build Create the PostgreSQL database psql -U postgres Then, in the PostgreSQL prompt, run: CREATE DATABASE laravel; Type \\q to exit. Run database migrations php artisan migrate Start the development server php artisan serve Access the app Visit http://localhost:8000 in your browser.","title":"Setup Guide"},{"location":"setup/#setup-guide-for-running-locally","text":"","title":"Setup Guide for Running Locally"},{"location":"setup/#prerequisites","text":"PHP Composer Node.js & npm PostgreSQL See the prerequisites page for detailed instructions.","title":"Prerequisites"},{"location":"setup/#steps","text":"","title":"Steps"},{"location":"setup/#clone-the-repository","text":"git clone https://github.com/jonathank1906/Web-Technologies-Project.git cd Web-Technologies-Project","title":"Clone the repository"},{"location":"setup/#install-php-dependencies","text":"composer install","title":"Install PHP dependencies"},{"location":"setup/#copy-and-configure-environment-file","text":"cp .env.example .env Copy and paste from here .","title":"Copy and configure environment file"},{"location":"setup/#install-nodejs-dependencies","text":"npm install","title":"Install Node.js dependencies"},{"location":"setup/#build-frontend-assets","text":"npm run build","title":"Build frontend assets"},{"location":"setup/#create-the-postgresql-database","text":"psql -U postgres Then, in the PostgreSQL prompt, run: CREATE DATABASE laravel; Type \\q to exit.","title":"Create the PostgreSQL database"},{"location":"setup/#run-database-migrations","text":"php artisan migrate","title":"Run database migrations"},{"location":"setup/#start-the-development-server","text":"php artisan serve","title":"Start the development server"},{"location":"setup/#access-the-app","text":"Visit http://localhost:8000 in your browser.","title":"Access the app"}]}